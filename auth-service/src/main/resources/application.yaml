spring:
  application:
    name: auth-service
  r2dbc:
    url: r2dbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
    username: ${DB_USER}
    password: ${DB_PASSWORD}

    # Flyway uses JDBC settings
  flyway:
    enabled: true
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
    user: ${DB_USER}
    password: ${DB_PASSWORD}
    locations: classpath:db/migration
    baseline-on-migrate: true
    # Rabbit MQ
  rabbitmq:
    host: localhost
    password: guest
    port: 5672
    username: guest

security:
  jwt:
    issuer: "http://localhost:9000"
    access-ttl-min: 15
    private-key-pem: ${JWT_PRIVATE_PEM_KEY_LOCATION}
    public-key-pem:  ${JWT_PUBLIC_PEM_KEY_LOCATION}


server:
  port: 9000

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
logging:
  level:
    # your code
    com.smart: DEBUG

    # Spring framework + WebFlux
    org.springframework: INFO
    org.springframework.web: DEBUG
    org.springframework.web.reactive: DEBUG
    #    org.springframework.web.reactive.function.client: DEBUG   # WebClient

    # Reactor + Netty (HTTP server/client, channel events, SSL, etc.)
    reactor.core: INFO
    reactor.netty: DEBUG
    reactor.netty.http.server: DEBUG
    reactor.netty.http.client: DEBUG

    # Security (handshakes, filters, auth decisions)
    #    org.springframework.security: DEBUG

    # Data/R2DBC (shows SQL from DatabaseClient)
    org.springframework.r2dbc.core: DEBUG
    io.r2dbc.spi: DEBUG

    # RabbitMQ (Spring AMQP + Java client frames)
    org.springframework.amqp: DEBUG
    org.springframework.rabbit: DEBUG
    com.rabbitmq.client: TRACE
